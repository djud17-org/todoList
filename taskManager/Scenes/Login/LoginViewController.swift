//
//  LoginViewController.swift
//  taskManager
//
//  Created by Давид Тоноян  on 22.02.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ILoginDisplayLogic: AnyObject {

	/// Функция рендерит вью по модели.
	/// - Parameter viewModel: модель для отображения.
	func renderData(with viewModel: LoginModel.ViewModel)
}

final class LoginViewController: UIViewController {

	// MARK: - Outlets

	@IBOutlet
	private weak var loginTextField: UITextField!

	@IBOutlet
	private weak var passwordTextField: UITextField!

	// MARK: - Parameters

	var interactor: ILoginBusinessLogic?
	var router: ILoginRoutingLogic?

	// MARK: - TextFields
	var loginText: String {
		get {
			loginTextField.text ?? ""
		}

		set {
			loginTextField.text = newValue
		}
	}

	var passText: String {
		get {
			passwordTextField.text ?? ""
		}

		set {
			passwordTextField.text = newValue
		}
	}

	// MARK: - Actions

	@IBAction
	private func loginButtonTapped(_ sender: UIButton) {
		let request = LoginModel.Request(
			login: loginText,
			password: passText
		)
		interactor?.login(request: request)
	}
}

extension LoginViewController: ILoginDisplayLogic {
	func renderData(with viewModel: LoginModel.ViewModel) {
		switch viewModel {
		case .success:
			router?.navigateToMainScreen()
		case .failure(let errorMessage):
			router?.showError(errorMessage: errorMessage)
		}
	}
}
